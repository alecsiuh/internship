image: python:3.11-alpine

stages:
  - deploy
  - commit
  - run_script
  - push_changes 
  - build

before_script:
  - apk update && apk add git && apk add python3 && apk add build-base && apk add cmake && apk add py3-pip

deploy_aws:
  tags:
    - ff-acs-gitlab-runner
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  only:
    - main
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 sync s3://cost-analysis-ff2024 ./resources
  artifacts:
    paths:
      - resources/ 

deploy_gcp:
  stage: deploy
  image:
    name: google/cloud-sdk
    entrypoint: [""]
  only:
    - main
  script:
    - echo $GCP_SERVICE_KEY > /tmp/gcp-key.json
    - gcloud auth activate-service-account --key-file /tmp/gcp-key.json
    - mkdir -p ./resources 
    - gsutil rsync -r gs://billing-ff2024/ ./resources
    - rm /tmp/gcp-key.json 
  artifacts:
    paths:
      - resources/

push_reports:
  stage: commit 
  tags:
    - ff-acs-gitlab-runner
  script: 
    - git config --global user.email "Alexia.cismaru@flowfactor.be"
    - git config --global user.name "Alexia Cismaru" 
    - git clone https://oauth2:$ACCESS_TOKEN@gitlab.com/flowfactor/stages/kdg-2024-levente-alexia-ransford-flowfactor/cost-management.git temp_repo
    - cp -r resources/* temp_repo/
    - cd temp_repo
    - git add .
    - git commit -m "Adding new cost reports"
    - git push origin main
  only:
    - main
  when: on_success 

run_script:
  stage: run_script
  script:
    - echo "Running main.py"
    - pip install -r requirements.txt 
    - python main.py
  artifacts:
    paths:
      - .
 
push_changes:
  stage: push_changes
  script:
    - echo "Configuring git"
    - git config --global user.email "Alexia.cismaru@flowfactor.be"
    - git config --global user.name "Alexia Cismaru" 
    - echo "Adding changes to git"
    - git add .
    - echo "Committing changes"
    - git commit -m "New forecasts and thresholds added"
    - echo "Pushing changes"
    - git push origin HEAD:main
  only:
    - main
  dependencies:
    - run_script

build:
  tags:
    - ff-acs-gitlab-runner
  image: 
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  stage: build
  services:
    - docker:dind 
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
      
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

after_script:
  - echo "Deployment stage finished."